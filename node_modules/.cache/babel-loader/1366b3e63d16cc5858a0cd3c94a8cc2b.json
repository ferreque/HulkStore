{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrador\\\\Desktop\\\\Programacion\\\\HuklStore\\\\hulk-store\\\\src\\\\components\\\\CardFin.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport Swal from \"sweetalert2\";\nimport { Form, Card, Container, Button, Image } from \"react-bootstrap\";\nimport { postOrders } from \"../helpers/orders\";\nimport { useNavigate } from \"react-router-dom\";\nimport { putProducts } from \"../helpers/products\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst token = JSON.parse(localStorage.getItem(\"auth\")) && JSON.parse(localStorage.getItem(\"auth\")).token;\n\nconst CardFin = _ref => {\n  _s();\n\n  let {\n    pedidos,\n    setEco,\n    setPedidos,\n    btnDisable\n  } = _ref;\n  let sumaTotal = 0;\n  const navigate = useNavigate();\n  const usuario = JSON.parse(localStorage.getItem(\"auth\")).usuario;\n  const carrito = JSON.parse(localStorage.getItem(\"carrito\"));\n  const [total, setTotal] = useState(0);\n  const [stock, setStock] = useState(0);\n\n  const restarStock = () => {\n    putProducts(carrito, pedidos).then(respuesta => {\n      console.log(respuesta);\n    });\n  };\n\n  restarStock();\n  useEffect(() => {\n    setEco(true);\n    setTotal(sumaTotal);\n    setEco(false);\n  });\n\n  for (let i = 0; i < pedidos.length; i++) {\n    sumaTotal = sumaTotal + pedidos[i].precio;\n  }\n\n  const getRandomNumberBetween = (min, max) => {\n    return Math.floor(Math.random() * (max - min + 1) + min);\n  };\n\n  const confirmarPedido = () => {\n    let orden = {\n      products: pedidos,\n      provincia: usuario.provincia,\n      localidad: usuario.localidad,\n      direccionEnvio: usuario.direccionEnvio,\n      precioTotal: total\n    };\n    postOrders(orden).then(respuesta => {\n      if (respuesta.errors) {\n        return window.alert(respuesta.errors[0].msg);\n      } else {\n        Swal.fire({\n          title: \"Pedido confirmado\",\n          icon: \"success\",\n          confirmButtonColor: \"#3085d6\"\n        });\n\n        const redireccion = () => navigate(\"../\", {\n          replace: true\n        });\n\n        redireccion();\n        localStorage.setItem(\"carrito\", JSON.stringify([]));\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"text-center row\",\n    children: [pedidos.map((pedido, index) => /*#__PURE__*/_jsxDEV(Card, {\n      className: \"mb-3 mi-4 justify-center col-4 mx-auto\",\n      children: [/*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Image, {\n          className: \"card-carrito\",\n          src: pedido.imagen\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Card.Title, {\n          className: \"mb-2\",\n          children: pedido.nombre\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n          children: [\"$ \", pedido.precio]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          children: /*#__PURE__*/_jsxDEV(Form.Control, {\n            onChange: e => {\n              pedidos[index] = { ...pedido,\n                notas: e.target.value\n              };\n              setPedidos(pedidos);\n            },\n            label: \"Comments\",\n            as: \"textarea\",\n            maxLength: \"150\",\n            placeholder: \"\\xBFNos queres aclarar algo sobre tu pedido?\",\n            style: {\n              height: \"100px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n          children: /*#__PURE__*/_jsxDEV(\"h5\", {\n            children: [\"Cantidad: \", pedido.cantidad]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: \"mb-4 pull-right mt-3\",\n        variant: \"light\",\n        onClick: () => {\n          const _pedidos = JSON.parse(localStorage.getItem(\"carrito\")) || [];\n\n          localStorage.setItem(\"carrito\", JSON.stringify(_pedidos.map(e => e).filter(e => e !== pedido._id)));\n          setPedidos(pedidos.filter(e => pedido._id !== e._id));\n        },\n        children: \"BORRAR\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this)]\n    }, getRandomNumberBetween(1, 1000000), true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row mb-2 col-12\",\n      children: /*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"mb-4 pull-right mt-3 mx-auto\",\n        children: [\"Precio total del pedido:\", sumaTotal]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card.Title, {\n      className: \"mb-2 col-12\",\n      children: pedidos.nombre\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      className: \"mb-4 pull-right mt-3 mx-auto\",\n      variant: \"light\",\n      disabled: btnDisable,\n      onClick: () => confirmarPedido(),\n      children: \"CONFIRMAR PEDIDO\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CardFin, \"V3gdrfT+HLlkRdYZz3UguC2vnJ4=\", false, function () {\n  return [useNavigate];\n});\n\n_c = CardFin;\nexport default CardFin;\n\nvar _c;\n\n$RefreshReg$(_c, \"CardFin\");","map":{"version":3,"sources":["C:/Users/Administrador/Desktop/Programacion/HuklStore/hulk-store/src/components/CardFin.jsx"],"names":["React","useEffect","useState","Swal","Form","Card","Container","Button","Image","postOrders","useNavigate","putProducts","token","JSON","parse","localStorage","getItem","CardFin","pedidos","setEco","setPedidos","btnDisable","sumaTotal","navigate","usuario","carrito","total","setTotal","stock","setStock","restarStock","then","respuesta","console","log","i","length","precio","getRandomNumberBetween","min","max","Math","floor","random","confirmarPedido","orden","products","provincia","localidad","direccionEnvio","precioTotal","errors","window","alert","msg","fire","title","icon","confirmButtonColor","redireccion","replace","setItem","stringify","map","pedido","index","imagen","nombre","e","notas","target","value","height","cantidad","_pedidos","filter","_id"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Swal from \"sweetalert2\";\r\nimport { Form, Card, Container, Button, Image } from \"react-bootstrap\";\r\nimport { postOrders } from \"../helpers/orders\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { putProducts } from \"../helpers/products\";\r\n\r\nconst token =\r\n  JSON.parse(localStorage.getItem(\"auth\")) &&\r\n  JSON.parse(localStorage.getItem(\"auth\")).token;\r\nconst CardFin = ({ pedidos, setEco, setPedidos, btnDisable }) => {\r\n  let sumaTotal = 0;\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const usuario = JSON.parse(localStorage.getItem(\"auth\")).usuario;\r\n  const carrito = JSON.parse(localStorage.getItem(\"carrito\"));\r\n\r\n  const [total, setTotal] = useState(0);\r\n  const [stock, setStock] = useState(0);\r\n\r\n  const restarStock = () => {\r\n    putProducts(carrito, pedidos).then((respuesta) => {\r\n      console.log(respuesta);\r\n    });\r\n  };\r\n  restarStock();\r\n\r\n  useEffect(() => {\r\n    setEco(true);\r\n    setTotal(sumaTotal);\r\n    setEco(false);\r\n  });\r\n  for (let i = 0; i < pedidos.length; i++) {\r\n    sumaTotal = sumaTotal + pedidos[i].precio;\r\n  }\r\n\r\n  const getRandomNumberBetween = (min, max) => {\r\n    return Math.floor(Math.random() * (max - min + 1) + min);\r\n  };\r\n\r\n  const confirmarPedido = () => {\r\n    let orden = {\r\n      products: pedidos,\r\n      provincia: usuario.provincia,\r\n      localidad: usuario.localidad,\r\n      direccionEnvio: usuario.direccionEnvio,\r\n      precioTotal: total,\r\n    };\r\n\r\n    postOrders(orden).then((respuesta) => {\r\n      if (respuesta.errors) {\r\n        return window.alert(respuesta.errors[0].msg);\r\n      } else {\r\n        Swal.fire({\r\n          title: \"Pedido confirmado\",\r\n          icon: \"success\",\r\n          confirmButtonColor: \"#3085d6\",\r\n        });\r\n        const redireccion = () => navigate(\"../\", { replace: true });\r\n        redireccion();\r\n        localStorage.setItem(\"carrito\", JSON.stringify([]));\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Container className=\"text-center row\">\r\n      {pedidos.map((pedido, index) => (\r\n        <Card\r\n          key={getRandomNumberBetween(1, 1000000)}\r\n          className=\"mb-3 mi-4 justify-center col-4 mx-auto\"\r\n        >\r\n          <Card.Body>\r\n            <Image className=\"card-carrito\" src={pedido.imagen} />\r\n            <Card.Title className=\"mb-2\">{pedido.nombre}</Card.Title>\r\n            <Card.Text>$ {pedido.precio}</Card.Text>\r\n            <Form>\r\n              <Form.Control\r\n                onChange={(e) => {\r\n                  pedidos[index] = { ...pedido, notas: e.target.value };\r\n                  setPedidos(pedidos);\r\n                }}\r\n                label=\"Comments\"\r\n                as=\"textarea\"\r\n                maxLength=\"150\"\r\n                placeholder=\"¿Nos queres aclarar algo sobre tu pedido?\"\r\n                style={{ height: \"100px\" }}\r\n              />\r\n            </Form>\r\n            <Card.Text>\r\n              <h5>Cantidad: {pedido.cantidad}</h5>\r\n            </Card.Text>\r\n          </Card.Body>\r\n          <Button\r\n            className=\"mb-4 pull-right mt-3\"\r\n            variant=\"light\"\r\n            onClick={() => {\r\n              const _pedidos =\r\n                JSON.parse(localStorage.getItem(\"carrito\")) || [];\r\n              localStorage.setItem(\r\n                \"carrito\",\r\n                JSON.stringify(\r\n                  _pedidos.map((e) => e).filter((e) => e !== pedido._id)\r\n                )\r\n              );\r\n              setPedidos(pedidos.filter((e) => pedido._id !== e._id));\r\n            }}\r\n          >\r\n            BORRAR\r\n          </Button>\r\n        </Card>\r\n      ))}\r\n\r\n      <div className=\"row mb-2 col-12\">\r\n        <h5 className=\"mb-4 pull-right mt-3 mx-auto\">\r\n          Precio total del pedido:{sumaTotal}\r\n        </h5>\r\n      </div>\r\n\r\n      <Card.Title className=\"mb-2 col-12\">{pedidos.nombre}</Card.Title>\r\n      <Button\r\n        className=\"mb-4 pull-right mt-3 mx-auto\"\r\n        variant=\"light\"\r\n        disabled={btnDisable}\r\n        onClick={() => confirmarPedido()}\r\n      >\r\n        CONFIRMAR PEDIDO\r\n      </Button>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default CardFin;\r\n"]},"metadata":{},"sourceType":"module"}