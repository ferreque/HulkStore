{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrador\\\\Desktop\\\\Programacion\\\\HuklStore\\\\hulk-store\\\\src\\\\components\\\\modales\\\\ModalProducts.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Modal, Button } from \"react-bootstrap\";\nimport { getProduct, postProducts, putProducts } from \"../../helpers/products\";\nimport { getCategories } from \"../../helpers/categories\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ModalProducts = _ref => {\n  _s();\n\n  let {\n    show,\n    handleClose,\n    actualizar\n  } = _ref;\n  const [loading, setLoading] = useState(false);\n  const [categories, setCategories] = useState([]);\n  const [formValue, setFormValue] = useState({\n    nombre: \"\",\n    precio: \"\",\n    descripcion: \"\",\n    categoria: \"\",\n    disponible: true\n  });\n  useEffect(() => {\n    getCategories().then(respuesta => {\n      setCategories(respuesta.categories);\n    });\n  }, []);\n  useEffect(() => {\n    setFormValue({\n      nombre: \"\",\n      precio: \"\",\n      descripcion: \"\",\n      categoria: \"\",\n      disponible: true\n    });\n\n    if (actualizar) {\n      getProduct(actualizar).then(respuesta => {\n        setFormValue({\n          nombre: respuesta.product.nombre,\n          precio: respuesta.product.precio,\n          descripcion: respuesta.product.descripcion,\n          categoria: respuesta.product.categorie,\n          disponible: respuesta.product.disponible\n        });\n      });\n    }\n  }, [actualizar]);\n\n  const handleChange = _ref2 => {\n    let {\n      target\n    } = _ref2;\n\n    if (target.name === \"disponible\") {\n      setFormValue({ ...formValue,\n        [target.name]: target.checked\n      });\n    } else {\n      setFormValue({ ...formValue,\n        [target.name]: target.value\n      });\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setLoading(true);\n\n    if (actualizar) {\n      putProducts(actualizar, formValue).then(respuesta => {\n        if (respuesta.errors) {\n          setLoading(false);\n          return window.alert(respuesta.errors[0].msg);\n        }\n\n        if (respuesta.msg) {\n          window.alert(respuesta.msg);\n        }\n\n        setLoading(false);\n        setFormValue({\n          nombre: \"\",\n          precio: \"\",\n          descripcion: \"\",\n          categoria: \"\",\n          disponible: true\n        });\n        handleClose();\n      });\n    } else {\n      postProducts(formValue).then(respuesta => {\n        if (respuesta.errors) {\n          setLoading(false);\n          return window.alert(respuesta.errors[0].msg);\n        }\n\n        if (respuesta.msg) {\n          window.alert(respuesta.msg);\n        }\n\n        setLoading(false);\n        setFormValue({\n          nombre: \"\",\n          precio: \"\",\n          descripcion: \"\",\n          categoria: \"\",\n          disponible: true\n        });\n        handleClose();\n      });\n    }\n  };\n\n  console.log(categories);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Modal, {\n      show: show,\n      onHide: handleClose,\n      centered: true,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: actualizar ? \"Modificar producto\" : \"Nuevo producto\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Modal.Body, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Nombre\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"nombre\",\n              className: \"form-control\",\n              placeholder: \"Ej: Hulk: La fuerza verde.\",\n              required: true,\n              value: formValue.nombre,\n              onChange: handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Precio\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              name: \"precio\",\n              className: \"form-control\",\n              value: formValue.precio,\n              onChange: handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Descripci\\xF3n\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              type: \"text\",\n              name: \"descripcion\",\n              className: \"form-control\",\n              value: formValue.descripcion,\n              onChange: handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Categorias\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              className: \"form-select\",\n              name: \"categoria\",\n              value: formValue.categoria,\n              onChange: handleChange,\n              required: true,\n              children: categories.map(categorie => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: categorie._id,\n                children: categorie.nombre\n              }, categorie._id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-check\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"form-check-input\",\n              type: \"checkbox\",\n              checked: formValue.disponible,\n              value: formValue.disponible,\n              onChange: handleChange,\n              name: \"disponible\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Disponible\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"secondary\",\n            onClick: handleClose,\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"success\",\n            type: \"submit\",\n            disabled: loading,\n            children: \"Save Changes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ModalProducts, \"Fc1kGUiEYDkHrjIUgzY8QuOlisA=\");\n\n_c = ModalProducts;\nexport default ModalProducts;\n\nvar _c;\n\n$RefreshReg$(_c, \"ModalProducts\");","map":{"version":3,"sources":["C:/Users/Administrador/Desktop/Programacion/HuklStore/hulk-store/src/components/modales/ModalProducts.jsx"],"names":["React","useState","useEffect","Modal","Button","getProduct","postProducts","putProducts","getCategories","ModalProducts","show","handleClose","actualizar","loading","setLoading","categories","setCategories","formValue","setFormValue","nombre","precio","descripcion","categoria","disponible","then","respuesta","product","categorie","handleChange","target","name","checked","value","handleSubmit","e","preventDefault","errors","window","alert","msg","console","log","map","_id"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Modal, Button } from \"react-bootstrap\";\r\nimport { getProduct, postProducts, putProducts } from \"../../helpers/products\";\r\nimport { getCategories } from \"../../helpers/categories\";\r\n\r\nconst ModalProducts = ({ show, handleClose, actualizar }) => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [categories, setCategories] = useState([]);\r\n  const [formValue, setFormValue] = useState({\r\n    nombre: \"\",\r\n    precio: \"\",\r\n    descripcion: \"\",\r\n    categoria: \"\",\r\n    disponible: true,\r\n  });\r\n\r\n  useEffect(() => {\r\n    getCategories().then((respuesta) => {\r\n      setCategories(respuesta.categories);\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setFormValue({\r\n      nombre: \"\",\r\n      precio: \"\",\r\n      descripcion: \"\",\r\n      categoria: \"\",\r\n      disponible: true,\r\n    });\r\n    if (actualizar) {\r\n      getProduct(actualizar).then((respuesta) => {\r\n        setFormValue({\r\n          nombre: respuesta.product.nombre,\r\n          precio: respuesta.product.precio,\r\n          descripcion: respuesta.product.descripcion,\r\n          categoria: respuesta.product.categorie,\r\n          disponible: respuesta.product.disponible,\r\n        });\r\n      });\r\n    }\r\n  }, [actualizar]);\r\n\r\n  const handleChange = ({ target }) => {\r\n    if (target.name === \"disponible\") {\r\n      setFormValue({\r\n        ...formValue,\r\n        [target.name]: target.checked,\r\n      });\r\n    } else {\r\n      setFormValue({\r\n        ...formValue,\r\n        [target.name]: target.value,\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    setLoading(true);\r\n\r\n    if (actualizar) {\r\n      putProducts(actualizar, formValue).then((respuesta) => {\r\n        if (respuesta.errors) {\r\n          setLoading(false);\r\n          return window.alert(respuesta.errors[0].msg);\r\n        }\r\n        if (respuesta.msg) {\r\n          window.alert(respuesta.msg);\r\n        }\r\n        setLoading(false);\r\n        setFormValue({\r\n          nombre: \"\",\r\n          precio: \"\",\r\n          descripcion: \"\",\r\n          categoria: \"\",\r\n          disponible: true,\r\n        });\r\n        handleClose();\r\n      });\r\n    } else {\r\n      postProducts(formValue).then((respuesta) => {\r\n        if (respuesta.errors) {\r\n          setLoading(false);\r\n          return window.alert(respuesta.errors[0].msg);\r\n        }\r\n        if (respuesta.msg) {\r\n          window.alert(respuesta.msg);\r\n        }\r\n        setLoading(false);\r\n        setFormValue({\r\n          nombre: \"\",\r\n          precio: \"\",\r\n          descripcion: \"\",\r\n          categoria: \"\",\r\n          disponible: true,\r\n        });\r\n        handleClose();\r\n      });\r\n    }\r\n  };\r\n  console.log(categories);\r\n  return (\r\n    <div>\r\n      <Modal show={show} onHide={handleClose} centered>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>\r\n            {actualizar ? \"Modificar producto\" : \"Nuevo producto\"}\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <form onSubmit={handleSubmit}>\r\n          <Modal.Body>\r\n            <div className=\"form-group\">\r\n              <label>Nombre</label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"nombre\"\r\n                className=\"form-control\"\r\n                placeholder=\"Ej: Hulk: La fuerza verde.\"\r\n                required\r\n                value={formValue.nombre}\r\n                onChange={handleChange}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Precio</label>\r\n              <input\r\n                type=\"number\"\r\n                name=\"precio\"\r\n                className=\"form-control\"\r\n                value={formValue.precio}\r\n                onChange={handleChange}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Descripción</label>\r\n              <textarea\r\n                type=\"text\"\r\n                name=\"descripcion\"\r\n                className=\"form-control\"\r\n                value={formValue.descripcion}\r\n                onChange={handleChange}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Categorias</label>\r\n              <select\r\n                className=\"form-select\"\r\n                name=\"categoria\"\r\n                value={formValue.categoria}\r\n                onChange={handleChange}\r\n                required\r\n              >\r\n                {categories.map((categorie) => (\r\n                  <option key={categorie._id} value={categorie._id}>\r\n                    {categorie.nombre}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n\r\n            <div className=\"form-check\">\r\n              <input\r\n                className=\"form-check-input\"\r\n                type=\"checkbox\"\r\n                checked={formValue.disponible}\r\n                value={formValue.disponible}\r\n                onChange={handleChange}\r\n                name=\"disponible\"\r\n              />\r\n              <label>Disponible</label>\r\n            </div>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={handleClose}>\r\n              Close\r\n            </Button>\r\n            <Button variant=\"success\" type=\"submit\" disabled={loading}>\r\n              Save Changes\r\n            </Button>\r\n          </Modal.Footer>\r\n        </form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ModalProducts;\r\n"]},"metadata":{},"sourceType":"module"}