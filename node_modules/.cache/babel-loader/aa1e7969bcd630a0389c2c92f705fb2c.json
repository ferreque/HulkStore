{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrador\\\\Desktop\\\\Programacion\\\\HuklStore\\\\hulk-store\\\\src\\\\components\\\\CardFin.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport Swal from \"sweetalert2\";\nimport { Form, Card, Container, Button } from \"react-bootstrap\";\nimport { postComandaAdmin } from \"../helpers/comandas\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst token = JSON.parse(localStorage.getItem(\"auth\")).token;\n\nconst CardFin = _ref => {\n  _s();\n\n  let {\n    pedidos,\n    setEco,\n    setPedidos\n  } = _ref;\n  const navigate = useNavigate();\n  const usuario = JSON.parse(localStorage.getItem(\"auth\")).usuario;\n  useEffect(() => {\n    setEco(true);\n    setEco(false);\n  });\n\n  const getRandomNumberBetween = (min, max) => {\n    return Math.floor(Math.random() * (max - min + 1) + min);\n  };\n\n  const confirmarPedido = () => {\n    pedidos.forEach(pedido => {\n      let product = {\n        producto: pedido.nombre,\n        prodId: pedido._id,\n        cantidad: 1,\n        tipo: pedido.tipo,\n        nombreCliente: usuario.nombre,\n        mesa: \"1\",\n        estado: \"Pendiente\",\n        numeroPedido: getRandomNumberBetween(1, 100000),\n        descripcion: (pedido === null || pedido === void 0 ? void 0 : pedido.notas) || \"No se especificaron notas para este pedido\"\n      };\n      postComandaAdmin(product, token).then(respuesta => {\n        if (respuesta.errors) {\n          return window.alert(respuesta.errors[0].msg);\n        } else {\n          Swal.fire({\n            title: \"Pedido confirmado\",\n            icon: \"success\",\n            confirmButtonColor: \"#3085d6\"\n          });\n\n          const redireccion = () => navigate(\"../\", {\n            replace: true\n          });\n\n          redireccion();\n        }\n      });\n    });\n    localStorage.setItem(\"carrito\", JSON.stringify([]));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"text-center\",\n    children: [pedidos.map((pedido, index) => /*#__PURE__*/_jsxDEV(Card, {\n      className: \"  mb-3 mi-4 login-card cardcarrito justify-center\",\n      children: [/*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n          className: \"mb-2 \",\n          children: pedido.nombre\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n          children: [\"$ \", pedido.precio]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          children: /*#__PURE__*/_jsxDEV(Form.Control, {\n            onChange: e => {\n              pedidos[index] = { ...pedido,\n                notas: e.target.value\n              };\n              setPedidos(pedidos);\n            },\n            label: \"Comments\",\n            as: \"textarea\",\n            maxLength: \"150\",\n            placeholder: \"\\xBFNos queres aclarar algo sobre tu Tastypedido?\",\n            style: {\n              height: \"100px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: \"mb-4 pull-right mt-3\",\n        variant: \"light\",\n        onClick: () => {\n          const _pedidos = JSON.parse(localStorage.getItem(\"carrito\")) || [];\n\n          localStorage.setItem(\"carrito\", JSON.stringify(_pedidos.map(e => e).filter(e => e !== pedido._id)));\n          setPedidos(pedidos.filter(e => pedido._id !== e._id));\n        },\n        children: \"BORRAR\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this)]\n    }, getRandomNumberBetween(1, 1000000), true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(Button, {\n      className: \"mb-4 pull-right mt-3\",\n      variant: \"light\",\n      onClick: () => confirmarPedido(),\n      children: \"CONFIRMAR PEDIDO\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CardFin, \"0pNeyzXk/ByIxyERsdaIrG6js9s=\", false, function () {\n  return [useNavigate];\n});\n\n_c = CardFin;\nexport default CardFin;\n\nvar _c;\n\n$RefreshReg$(_c, \"CardFin\");","map":{"version":3,"sources":["C:/Users/Administrador/Desktop/Programacion/HuklStore/hulk-store/src/components/CardFin.jsx"],"names":["React","useEffect","Swal","Form","Card","Container","Button","postComandaAdmin","useNavigate","token","JSON","parse","localStorage","getItem","CardFin","pedidos","setEco","setPedidos","navigate","usuario","getRandomNumberBetween","min","max","Math","floor","random","confirmarPedido","forEach","pedido","product","producto","nombre","prodId","_id","cantidad","tipo","nombreCliente","mesa","estado","numeroPedido","descripcion","notas","then","respuesta","errors","window","alert","msg","fire","title","icon","confirmButtonColor","redireccion","replace","setItem","stringify","map","index","precio","e","target","value","height","_pedidos","filter"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport Swal from \"sweetalert2\";\r\nimport { Form, Card, Container, Button } from \"react-bootstrap\";\r\nimport { postComandaAdmin } from \"../helpers/comandas\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst token = JSON.parse(localStorage.getItem(\"auth\")).token;\r\n\r\nconst CardFin = ({ pedidos, setEco, setPedidos }) => {\r\n  const navigate = useNavigate();\r\n  const usuario = JSON.parse(localStorage.getItem(\"auth\")).usuario;\r\n\r\n  useEffect(() => {\r\n    setEco(true);\r\n\r\n    setEco(false);\r\n  });\r\n\r\n  const getRandomNumberBetween = (min, max) => {\r\n    return Math.floor(Math.random() * (max - min + 1) + min);\r\n  };\r\n\r\n  const confirmarPedido = () => {\r\n    pedidos.forEach((pedido) => {\r\n      let product = {\r\n        producto: pedido.nombre,\r\n        prodId: pedido._id,\r\n        cantidad: 1,\r\n        tipo: pedido.tipo,\r\n        nombreCliente: usuario.nombre,\r\n        mesa: \"1\",\r\n        estado: \"Pendiente\",\r\n        numeroPedido: getRandomNumberBetween(1, 100000),\r\n        descripcion:\r\n          pedido?.notas || \"No se especificaron notas para este pedido\",\r\n      };\r\n\r\n      postComandaAdmin(product, token).then((respuesta) => {\r\n        if (respuesta.errors) {\r\n          return window.alert(respuesta.errors[0].msg);\r\n        } else {\r\n          Swal.fire({\r\n            title: \"Pedido confirmado\",\r\n            icon: \"success\",\r\n            confirmButtonColor: \"#3085d6\",\r\n          });\r\n          const redireccion = () => navigate(\"../\", { replace: true });\r\n          redireccion();\r\n        }\r\n      });\r\n    });\r\n    localStorage.setItem(\"carrito\", JSON.stringify([]));\r\n  };\r\n\r\n  return (\r\n    <Container className=\"text-center\">\r\n      {pedidos.map((pedido, index) => (\r\n        <Card\r\n          key={getRandomNumberBetween(1, 1000000)}\r\n          className=\"  mb-3 mi-4 login-card cardcarrito justify-center\"\r\n        >\r\n          <Card.Body>\r\n            <Card.Title className=\"mb-2 \">{pedido.nombre}</Card.Title>\r\n            <Card.Text>$ {pedido.precio}</Card.Text>\r\n            <Form>\r\n              <Form.Control\r\n                onChange={(e) => {\r\n                  pedidos[index] = { ...pedido, notas: e.target.value };\r\n                  setPedidos(pedidos);\r\n                }}\r\n                label=\"Comments\"\r\n                as=\"textarea\"\r\n                maxLength=\"150\"\r\n                placeholder=\"¿Nos queres aclarar algo sobre tu Tastypedido?\"\r\n                style={{ height: \"100px\" }}\r\n              />\r\n            </Form>\r\n          </Card.Body>\r\n          <Button\r\n            className=\"mb-4 pull-right mt-3\"\r\n            variant=\"light\"\r\n            onClick={() => {\r\n              const _pedidos =\r\n                JSON.parse(localStorage.getItem(\"carrito\")) || [];\r\n              localStorage.setItem(\r\n                \"carrito\",\r\n                JSON.stringify(\r\n                  _pedidos.map((e) => e).filter((e) => e !== pedido._id)\r\n                )\r\n              );\r\n              setPedidos(pedidos.filter((e) => pedido._id !== e._id));\r\n            }}\r\n          >\r\n            BORRAR\r\n          </Button>\r\n        </Card>\r\n      ))}\r\n\r\n      <Button\r\n        className=\"mb-4 pull-right mt-3\"\r\n        variant=\"light\"\r\n        onClick={() => confirmarPedido()}\r\n      >\r\n        CONFIRMAR PEDIDO\r\n      </Button>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default CardFin;\r\n"]},"metadata":{},"sourceType":"module"}