{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrador\\\\Desktop\\\\Programacion\\\\HuklStore\\\\hulk-store\\\\src\\\\components\\\\CardFin.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport Swal from \"sweetalert2\";\nimport { Form, Card, Container, Button, Image } from \"react-bootstrap\";\nimport { postOrders } from \"../helpers/orders\";\nimport { useNavigate } from \"react-router-dom\";\nimport { getProduct } from \"../helpers/products\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst token = JSON.parse(localStorage.getItem(\"auth\")) && JSON.parse(localStorage.getItem(\"auth\")).token;\n\nconst CardFin = _ref => {\n  _s();\n\n  let {\n    pedidos,\n    setEco,\n    setPedidos,\n    btnDisable\n  } = _ref;\n  const navigate = useNavigate();\n  const usuario = JSON.parse(localStorage.getItem(\"auth\")).usuario;\n  useEffect(() => {\n    setEco(true);\n    setEco(false);\n  });\n\n  const setCantidad = () => {\n    pedidos.forEach(pedido => {\n      pedido.cantidad = 1;\n    });\n  };\n\n  setCantidad();\n  console.log(pedidos._id);\n\n  const getRandomNumberBetween = (min, max) => {\n    return Math.floor(Math.random() * (max - min + 1) + min);\n  };\n\n  const confirmarPedido = () => {\n    let orden = {\n      products: pedidos,\n      provincia: usuario.provincia,\n      localidad: usuario.localidad,\n      direccionEnvio: usuario.direccionEnvio,\n      precioTotal: \"\"\n    };\n    postOrders(orden).then(respuesta => {\n      if (respuesta.errors) {\n        return window.alert(respuesta.errors[0].msg);\n      } else {\n        Swal.fire({\n          title: \"Pedido confirmado\",\n          icon: \"success\",\n          confirmButtonColor: \"#3085d6\"\n        });\n\n        const redireccion = () => navigate(\"../\", {\n          replace: true\n        });\n\n        redireccion();\n        localStorage.setItem(\"carrito\", JSON.stringify([]));\n      }\n    });\n    localStorage.setItem(\"carrito\", JSON.stringify([]));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"text-center row\",\n    children: [pedidos.map((pedido, index) => /*#__PURE__*/_jsxDEV(Card, {\n      className: \"mb-3 mi-4 justify-center col-4 mx-auto\",\n      children: [/*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Image, {\n          className: \"card-carrito\",\n          src: pedido.imagen\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Card.Title, {\n          className: \"mb-2\",\n          children: pedido.nombre\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n          children: [\"$ \", pedido.precio]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          children: /*#__PURE__*/_jsxDEV(Form.Control, {\n            onChange: e => {\n              pedidos[index] = { ...pedido,\n                notas: e.target.value\n              };\n              setPedidos(pedidos);\n            },\n            label: \"Comments\",\n            as: \"textarea\",\n            maxLength: \"150\",\n            placeholder: \"\\xBFNos queres aclarar algo sobre tu pedido?\",\n            style: {\n              height: \"100px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n          children: /*#__PURE__*/_jsxDEV(\"h5\", {\n            children: [\"Cantidad: \", pedido.cantidad]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: \"mb-4 pull-right mt-3\",\n        variant: \"light\",\n        onClick: () => {\n          const _pedidos = JSON.parse(localStorage.getItem(\"carrito\")) || [];\n\n          localStorage.setItem(\"carrito\", JSON.stringify(_pedidos.map(e => e).filter(e => e !== pedido._id)));\n          setPedidos(pedidos.filter(e => pedido._id !== e._id));\n        },\n        children: \"BORRAR\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this)]\n    }, getRandomNumberBetween(1, 1000000), true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(Card.Title, {\n      className: \"mb-2 col-12\",\n      children: pedidos.nombre\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      className: \"mb-4 pull-right mt-3 mx-auto\",\n      variant: \"light\",\n      disabled: btnDisable,\n      onClick: () => confirmarPedido(),\n      children: \"CONFIRMAR PEDIDO\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CardFin, \"0pNeyzXk/ByIxyERsdaIrG6js9s=\", false, function () {\n  return [useNavigate];\n});\n\n_c = CardFin;\nexport default CardFin;\n\nvar _c;\n\n$RefreshReg$(_c, \"CardFin\");","map":{"version":3,"sources":["C:/Users/Administrador/Desktop/Programacion/HuklStore/hulk-store/src/components/CardFin.jsx"],"names":["React","useEffect","Swal","Form","Card","Container","Button","Image","postOrders","useNavigate","getProduct","token","JSON","parse","localStorage","getItem","CardFin","pedidos","setEco","setPedidos","btnDisable","navigate","usuario","setCantidad","forEach","pedido","cantidad","console","log","_id","getRandomNumberBetween","min","max","Math","floor","random","confirmarPedido","orden","products","provincia","localidad","direccionEnvio","precioTotal","then","respuesta","errors","window","alert","msg","fire","title","icon","confirmButtonColor","redireccion","replace","setItem","stringify","map","index","imagen","nombre","precio","e","notas","target","value","height","_pedidos","filter"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport Swal from \"sweetalert2\";\r\nimport { Form, Card, Container, Button, Image } from \"react-bootstrap\";\r\nimport { postOrders } from \"../helpers/orders\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { getProduct } from \"../helpers/products\";\r\nconst token =\r\n  JSON.parse(localStorage.getItem(\"auth\")) &&\r\n  JSON.parse(localStorage.getItem(\"auth\")).token;\r\n\r\nconst CardFin = ({ pedidos, setEco, setPedidos, btnDisable }) => {\r\n  const navigate = useNavigate();\r\n  const usuario = JSON.parse(localStorage.getItem(\"auth\")).usuario;\r\n\r\n  useEffect(() => {\r\n    setEco(true);\r\n    setEco(false);\r\n  });\r\n  const setCantidad = () => {\r\n    pedidos.forEach((pedido) => {\r\n      pedido.cantidad = 1;\r\n    });\r\n  };\r\n  setCantidad();\r\n  console.log(pedidos._id);\r\n\r\n  const getRandomNumberBetween = (min, max) => {\r\n    return Math.floor(Math.random() * (max - min + 1) + min);\r\n  };\r\n\r\n  const confirmarPedido = () => {\r\n    let orden = {\r\n      products: pedidos,\r\n      provincia: usuario.provincia,\r\n      localidad: usuario.localidad,\r\n      direccionEnvio: usuario.direccionEnvio,\r\n      precioTotal: \"\",\r\n    };\r\n\r\n    postOrders(orden).then((respuesta) => {\r\n      if (respuesta.errors) {\r\n        return window.alert(respuesta.errors[0].msg);\r\n      } else {\r\n        Swal.fire({\r\n          title: \"Pedido confirmado\",\r\n          icon: \"success\",\r\n          confirmButtonColor: \"#3085d6\",\r\n        });\r\n        const redireccion = () => navigate(\"../\", { replace: true });\r\n        redireccion();\r\n        localStorage.setItem(\"carrito\", JSON.stringify([]));\r\n      }\r\n    });\r\n\r\n    localStorage.setItem(\"carrito\", JSON.stringify([]));\r\n  };\r\n\r\n  return (\r\n    <Container className=\"text-center row\">\r\n      {pedidos.map((pedido, index) => (\r\n        <Card\r\n          key={getRandomNumberBetween(1, 1000000)}\r\n          className=\"mb-3 mi-4 justify-center col-4 mx-auto\"\r\n        >\r\n          <Card.Body>\r\n            <Image className=\"card-carrito\" src={pedido.imagen} />\r\n            <Card.Title className=\"mb-2\">{pedido.nombre}</Card.Title>\r\n            <Card.Text>$ {pedido.precio}</Card.Text>\r\n            <Form>\r\n              <Form.Control\r\n                onChange={(e) => {\r\n                  pedidos[index] = { ...pedido, notas: e.target.value };\r\n                  setPedidos(pedidos);\r\n                }}\r\n                label=\"Comments\"\r\n                as=\"textarea\"\r\n                maxLength=\"150\"\r\n                placeholder=\"¿Nos queres aclarar algo sobre tu pedido?\"\r\n                style={{ height: \"100px\" }}\r\n              />\r\n            </Form>\r\n            <Card.Text>\r\n              <h5>Cantidad: {pedido.cantidad}</h5>\r\n            </Card.Text>\r\n          </Card.Body>\r\n          <Button\r\n            className=\"mb-4 pull-right mt-3\"\r\n            variant=\"light\"\r\n            onClick={() => {\r\n              const _pedidos =\r\n                JSON.parse(localStorage.getItem(\"carrito\")) || [];\r\n              localStorage.setItem(\r\n                \"carrito\",\r\n                JSON.stringify(\r\n                  _pedidos.map((e) => e).filter((e) => e !== pedido._id)\r\n                )\r\n              );\r\n              setPedidos(pedidos.filter((e) => pedido._id !== e._id));\r\n            }}\r\n          >\r\n            BORRAR\r\n          </Button>\r\n        </Card>\r\n      ))}\r\n\r\n      <Card.Title className=\"mb-2 col-12\">{pedidos.nombre}</Card.Title>\r\n      <Button\r\n        className=\"mb-4 pull-right mt-3 mx-auto\"\r\n        variant=\"light\"\r\n        disabled={btnDisable}\r\n        onClick={() => confirmarPedido()}\r\n      >\r\n        CONFIRMAR PEDIDO\r\n      </Button>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default CardFin;\r\n"]},"metadata":{},"sourceType":"module"}