{"ast":null,"code":"const url = \"http://localhost:8080/api/users/\";\nexport const getUsers = async () => {\n  const respuesta = await fetch(url, {\n    method: \"GET\",\n    headers: {\n      \"Content-type\": \"application/json; charset=UTF-8\",\n      \"x-token\": JSON.parse(localStorage.getItem(\"auth\")).token\n    }\n  });\n  const datos = await respuesta.json();\n  return datos;\n};\nexport const getUser = async id => {\n  const respuesta = await fetch(`${url}${id}`, {\n    method: \"GET\",\n    headers: {\n      \"Content-type\": \"application/json; charset=UTF-8\",\n      \"x-token\": JSON.parse(localStorage.getItem(\"auth\")).token\n    }\n  });\n  const datos = await respuesta.json();\n  return datos;\n};\nexport const postUsers = async data => {\n  const respuesta = await fetch(url, {\n    method: \"POST\",\n    body: JSON.stringify(data),\n    headers: {\n      \"Content-type\": \"application/json; charset=UTF-8\"\n    }\n  });\n  const datos = await respuesta.json();\n  return datos;\n};\nexport const putUsers = async (id, data) => {\n  const respuesta = await fetch(`${url}${id}`, {\n    method: \"PUT\",\n    body: JSON.stringify(data),\n    headers: {\n      \"Content-type\": \"application/json; charset=UTF-8\",\n      \"x-token\": JSON.parse(localStorage.getItem(\"auth\")).token\n    }\n  });\n  const datos = await respuesta.json();\n  return datos;\n};\nexport const deleteUsers = async id => {\n  const respuesta = await fetch(`${url}${id}`, {\n    method: \"DELETE\",\n    headers: {\n      \"Content-type\": \"application/json; charset=UTF-8\",\n      \"x-token\": JSON.parse(localStorage.getItem(\"auth\")).token\n    }\n  });\n  const datos = await respuesta.json();\n  return datos;\n};","map":{"version":3,"sources":["C:/Users/Administrador/Desktop/Programacion/HuklStore/hulk-store/src/helpers/users.js"],"names":["url","getUsers","respuesta","fetch","method","headers","JSON","parse","localStorage","getItem","token","datos","json","getUser","id","postUsers","data","body","stringify","putUsers","deleteUsers"],"mappings":"AAAA,MAAMA,GAAG,GAAG,kCAAZ;AAEA,OAAO,MAAMC,QAAQ,GAAG,YAAY;AAClC,QAAMC,SAAS,GAAG,MAAMC,KAAK,CAACH,GAAD,EAAM;AACjCI,IAAAA,MAAM,EAAE,KADyB;AAEjCC,IAAAA,OAAO,EAAE;AACP,sBAAgB,iCADT;AAEP,iBAAWC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,EAAyCC;AAF7C;AAFwB,GAAN,CAA7B;AAOA,QAAMC,KAAK,GAAG,MAAMT,SAAS,CAACU,IAAV,EAApB;AACA,SAAOD,KAAP;AACD,CAVM;AAYP,OAAO,MAAME,OAAO,GAAG,MAAOC,EAAP,IAAc;AACnC,QAAMZ,SAAS,GAAG,MAAMC,KAAK,CAAE,GAAEH,GAAI,GAAEc,EAAG,EAAb,EAAgB;AAC3CV,IAAAA,MAAM,EAAE,KADmC;AAE3CC,IAAAA,OAAO,EAAE;AACP,sBAAgB,iCADT;AAEP,iBAAWC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,EAAyCC;AAF7C;AAFkC,GAAhB,CAA7B;AAOA,QAAMC,KAAK,GAAG,MAAMT,SAAS,CAACU,IAAV,EAApB;AACA,SAAOD,KAAP;AACD,CAVM;AAYP,OAAO,MAAMI,SAAS,GAAG,MAAOC,IAAP,IAAgB;AACvC,QAAMd,SAAS,GAAG,MAAMC,KAAK,CAACH,GAAD,EAAM;AACjCI,IAAAA,MAAM,EAAE,MADyB;AAEjCa,IAAAA,IAAI,EAAEX,IAAI,CAACY,SAAL,CAAeF,IAAf,CAF2B;AAGjCX,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT;AAHwB,GAAN,CAA7B;AAOA,QAAMM,KAAK,GAAG,MAAMT,SAAS,CAACU,IAAV,EAApB;AAEA,SAAOD,KAAP;AACD,CAXM;AAaP,OAAO,MAAMQ,QAAQ,GAAG,OAAOL,EAAP,EAAWE,IAAX,KAAoB;AAC1C,QAAMd,SAAS,GAAG,MAAMC,KAAK,CAAE,GAAEH,GAAI,GAAEc,EAAG,EAAb,EAAgB;AAC3CV,IAAAA,MAAM,EAAE,KADmC;AAE3Ca,IAAAA,IAAI,EAAEX,IAAI,CAACY,SAAL,CAAeF,IAAf,CAFqC;AAG3CX,IAAAA,OAAO,EAAE;AACP,sBAAgB,iCADT;AAEP,iBAAWC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,EAAyCC;AAF7C;AAHkC,GAAhB,CAA7B;AAQA,QAAMC,KAAK,GAAG,MAAMT,SAAS,CAACU,IAAV,EAApB;AAEA,SAAOD,KAAP;AACD,CAZM;AAcP,OAAO,MAAMS,WAAW,GAAG,MAAON,EAAP,IAAc;AACvC,QAAMZ,SAAS,GAAG,MAAMC,KAAK,CAAE,GAAEH,GAAI,GAAEc,EAAG,EAAb,EAAgB;AAC3CV,IAAAA,MAAM,EAAE,QADmC;AAE3CC,IAAAA,OAAO,EAAE;AACP,sBAAgB,iCADT;AAEP,iBAAWC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,EAAyCC;AAF7C;AAFkC,GAAhB,CAA7B;AAOA,QAAMC,KAAK,GAAG,MAAMT,SAAS,CAACU,IAAV,EAApB;AAEA,SAAOD,KAAP;AACD,CAXM","sourcesContent":["const url = \"http://localhost:8080/api/users/\";\r\n\r\nexport const getUsers = async () => {\r\n  const respuesta = await fetch(url, {\r\n    method: \"GET\",\r\n    headers: {\r\n      \"Content-type\": \"application/json; charset=UTF-8\",\r\n      \"x-token\": JSON.parse(localStorage.getItem(\"auth\")).token,\r\n    },\r\n  });\r\n  const datos = await respuesta.json();\r\n  return datos;\r\n};\r\n\r\nexport const getUser = async (id) => {\r\n  const respuesta = await fetch(`${url}${id}`, {\r\n    method: \"GET\",\r\n    headers: {\r\n      \"Content-type\": \"application/json; charset=UTF-8\",\r\n      \"x-token\": JSON.parse(localStorage.getItem(\"auth\")).token,\r\n    },\r\n  });\r\n  const datos = await respuesta.json();\r\n  return datos;\r\n};\r\n\r\nexport const postUsers = async (data) => {\r\n  const respuesta = await fetch(url, {\r\n    method: \"POST\",\r\n    body: JSON.stringify(data),\r\n    headers: {\r\n      \"Content-type\": \"application/json; charset=UTF-8\",\r\n    },\r\n  });\r\n  const datos = await respuesta.json();\r\n\r\n  return datos;\r\n};\r\n\r\nexport const putUsers = async (id, data) => {\r\n  const respuesta = await fetch(`${url}${id}`, {\r\n    method: \"PUT\",\r\n    body: JSON.stringify(data),\r\n    headers: {\r\n      \"Content-type\": \"application/json; charset=UTF-8\",\r\n      \"x-token\": JSON.parse(localStorage.getItem(\"auth\")).token,\r\n    },\r\n  });\r\n  const datos = await respuesta.json();\r\n\r\n  return datos;\r\n};\r\n\r\nexport const deleteUsers = async (id) => {\r\n  const respuesta = await fetch(`${url}${id}`, {\r\n    method: \"DELETE\",\r\n    headers: {\r\n      \"Content-type\": \"application/json; charset=UTF-8\",\r\n      \"x-token\": JSON.parse(localStorage.getItem(\"auth\")).token,\r\n    },\r\n  });\r\n  const datos = await respuesta.json();\r\n\r\n  return datos;\r\n};\r\n"]},"metadata":{},"sourceType":"module"}