{"ast":null,"code":"const url = \"http://localhost:8080/api/products/\";\nexport const getProducts = async () => {\n  const respuesta = await fetch(url, {\n    method: \"GET\",\n    headers: {\n      \"Content-type\": \"application/json; charset=UTF-8\"\n    }\n  });\n  const datos = await respuesta.json();\n  return datos;\n};\nexport const getProduct = async id => {\n  const respuesta = await fetch(`${url}${id}`, {\n    method: \"GET\",\n    headers: {\n      \"Content-type\": \"application/json; charset=UTF-8\"\n    }\n  });\n  const datos = await respuesta.json();\n  return datos;\n};\nexport const postProducts = async data => {\n  console.log(data);\n  const respuesta = await fetch(url, {\n    method: \"POST\",\n    body: JSON.stringify(data),\n    headers: {\n      \"Content-type\": \"application/json; charset=UTF-8\",\n      \"x-token\": JSON.parse(localStorage.getItem(\"auth\")).token\n    }\n  });\n  const datos = await respuesta.json();\n  return datos;\n};\nexport const putProducts = async (id, data) => {\n  const respuesta = await fetch(`${url}${id}`, {\n    method: \"PUT\",\n    body: JSON.stringify(data),\n    headers: {\n      \"Content-type\": \"application/json; charset=UTF-8\",\n      \"x-token\": JSON.parse(localStorage.getItem(\"auth\")).token\n    }\n  });\n  const datos = await respuesta.json();\n  return datos;\n};\nexport const deleteProducts = async id => {\n  const respuesta = await fetch(`${url}${id}`, {\n    method: \"DELETE\",\n    headers: {\n      \"Content-type\": \"application/json; charset=UTF-8\",\n      \"x-token\": JSON.parse(localStorage.getItem(\"auth\")).token\n    }\n  });\n  const datos = await respuesta.json();\n  return datos;\n};","map":{"version":3,"sources":["C:/Users/Administrador/Desktop/Programacion/HuklStore/hulk-store/src/helpers/products.js"],"names":["url","getProducts","respuesta","fetch","method","headers","datos","json","getProduct","id","postProducts","data","console","log","body","JSON","stringify","parse","localStorage","getItem","token","putProducts","deleteProducts"],"mappings":"AAAA,MAAMA,GAAG,GAAG,qCAAZ;AAEA,OAAO,MAAMC,WAAW,GAAG,YAAY;AACrC,QAAMC,SAAS,GAAG,MAAMC,KAAK,CAACH,GAAD,EAAM;AACjCI,IAAAA,MAAM,EAAE,KADyB;AAEjCC,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT;AAFwB,GAAN,CAA7B;AAMA,QAAMC,KAAK,GAAG,MAAMJ,SAAS,CAACK,IAAV,EAApB;AACA,SAAOD,KAAP;AACD,CATM;AAWP,OAAO,MAAME,UAAU,GAAG,MAAOC,EAAP,IAAc;AACtC,QAAMP,SAAS,GAAG,MAAMC,KAAK,CAAE,GAAEH,GAAI,GAAES,EAAG,EAAb,EAAgB;AAC3CL,IAAAA,MAAM,EAAE,KADmC;AAE3CC,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT;AAFkC,GAAhB,CAA7B;AAMA,QAAMC,KAAK,GAAG,MAAMJ,SAAS,CAACK,IAAV,EAApB;AACA,SAAOD,KAAP;AACD,CATM;AAWP,OAAO,MAAMI,YAAY,GAAG,MAAOC,IAAP,IAAgB;AAC1CC,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,QAAMT,SAAS,GAAG,MAAMC,KAAK,CAACH,GAAD,EAAM;AACjCI,IAAAA,MAAM,EAAE,MADyB;AAEjCU,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeL,IAAf,CAF2B;AAGjCN,IAAAA,OAAO,EAAE;AACP,sBAAgB,iCADT;AAEP,iBAAWU,IAAI,CAACE,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,EAAyCC;AAF7C;AAHwB,GAAN,CAA7B;AAQA,QAAMd,KAAK,GAAG,MAAMJ,SAAS,CAACK,IAAV,EAApB;AACA,SAAOD,KAAP;AACD,CAZM;AAcP,OAAO,MAAMe,WAAW,GAAG,OAAOZ,EAAP,EAAWE,IAAX,KAAoB;AAC7C,QAAMT,SAAS,GAAG,MAAMC,KAAK,CAAE,GAAEH,GAAI,GAAES,EAAG,EAAb,EAAgB;AAC3CL,IAAAA,MAAM,EAAE,KADmC;AAE3CU,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeL,IAAf,CAFqC;AAG3CN,IAAAA,OAAO,EAAE;AACP,sBAAgB,iCADT;AAEP,iBAAWU,IAAI,CAACE,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,EAAyCC;AAF7C;AAHkC,GAAhB,CAA7B;AAQA,QAAMd,KAAK,GAAG,MAAMJ,SAAS,CAACK,IAAV,EAApB;AAEA,SAAOD,KAAP;AACD,CAZM;AAcP,OAAO,MAAMgB,cAAc,GAAG,MAAOb,EAAP,IAAc;AAC1C,QAAMP,SAAS,GAAG,MAAMC,KAAK,CAAE,GAAEH,GAAI,GAAES,EAAG,EAAb,EAAgB;AAC3CL,IAAAA,MAAM,EAAE,QADmC;AAE3CC,IAAAA,OAAO,EAAE;AACP,sBAAgB,iCADT;AAEP,iBAAWU,IAAI,CAACE,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,EAAyCC;AAF7C;AAFkC,GAAhB,CAA7B;AAOA,QAAMd,KAAK,GAAG,MAAMJ,SAAS,CAACK,IAAV,EAApB;AAEA,SAAOD,KAAP;AACD,CAXM","sourcesContent":["const url = \"http://localhost:8080/api/products/\";\r\n\r\nexport const getProducts = async () => {\r\n  const respuesta = await fetch(url, {\r\n    method: \"GET\",\r\n    headers: {\r\n      \"Content-type\": \"application/json; charset=UTF-8\",\r\n    },\r\n  });\r\n  const datos = await respuesta.json();\r\n  return datos;\r\n};\r\n\r\nexport const getProduct = async (id) => {\r\n  const respuesta = await fetch(`${url}${id}`, {\r\n    method: \"GET\",\r\n    headers: {\r\n      \"Content-type\": \"application/json; charset=UTF-8\",\r\n    },\r\n  });\r\n  const datos = await respuesta.json();\r\n  return datos;\r\n};\r\n\r\nexport const postProducts = async (data) => {\r\n  console.log(data);\r\n  const respuesta = await fetch(url, {\r\n    method: \"POST\",\r\n    body: JSON.stringify(data),\r\n    headers: {\r\n      \"Content-type\": \"application/json; charset=UTF-8\",\r\n      \"x-token\": JSON.parse(localStorage.getItem(\"auth\")).token,\r\n    },\r\n  });\r\n  const datos = await respuesta.json();\r\n  return datos;\r\n};\r\n\r\nexport const putProducts = async (id, data) => {\r\n  const respuesta = await fetch(`${url}${id}`, {\r\n    method: \"PUT\",\r\n    body: JSON.stringify(data),\r\n    headers: {\r\n      \"Content-type\": \"application/json; charset=UTF-8\",\r\n      \"x-token\": JSON.parse(localStorage.getItem(\"auth\")).token,\r\n    },\r\n  });\r\n  const datos = await respuesta.json();\r\n\r\n  return datos;\r\n};\r\n\r\nexport const deleteProducts = async (id) => {\r\n  const respuesta = await fetch(`${url}${id}`, {\r\n    method: \"DELETE\",\r\n    headers: {\r\n      \"Content-type\": \"application/json; charset=UTF-8\",\r\n      \"x-token\": JSON.parse(localStorage.getItem(\"auth\")).token,\r\n    },\r\n  });\r\n  const datos = await respuesta.json();\r\n\r\n  return datos;\r\n};\r\n"]},"metadata":{},"sourceType":"module"}